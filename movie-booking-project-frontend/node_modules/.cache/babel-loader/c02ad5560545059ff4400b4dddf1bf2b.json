{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jasvinder Kaur\\\\OneDrive\\\\Desktop\\\\final\\\\movie-booking-project\\\\movie-booking-project-frontend\\\\src\\\\components\\\\Movies\\\\AddMovie.js\",\n    _s = $RefreshSig$();\n\nimport { Box, Button, Checkbox, FormLabel, Snackbar, TextField, Typography } from \"@mui/material\";\nimport React, { useState } from \"react\";\nimport { addMovie } from \"../../api-helpers/api-helpers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst labelProps = {\n  mt: 1,\n  mb: 1\n};\n\nconst AddMovie = () => {\n  _s();\n\n  const [inputs, setInputs] = useState({\n    title: \"\",\n    description: \"\",\n    posterUrl: \"\",\n    releaseDate: \"\",\n    featured: false\n  });\n  const [actors, setActors] = useState([]);\n  const [actor, setActor] = useState(\"\");\n  const [snackbarOpen, setSnackbarOpen] = useState(false);\n  const [snackbarMessage, setSnackbarMessage] = useState(\"\");\n\n  const handleChange = e => {\n    setInputs(prevState => ({ ...prevState,\n      [e.target.name]: e.target.value\n    }));\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log(inputs, actors);\n    addMovie({ ...inputs,\n      actors\n    }).then(res => {\n      console.log(res);\n      setSnackbarMessage(\"Movie added successfully!\");\n      setSnackbarOpen(true);\n    }).catch(err => console.log(err));\n  }; // Function to handle closing Snackbar\n\n\n  const handleCloseSnackbar = () => {\n    setSnackbarOpen(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        width: \"50%\",\n        padding: 10,\n        margin: \"auto\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        boxShadow: \"10px 10px 20px #ccc\",\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          textAlign: \"center\",\n          variant: \"h5\",\n          fontFamily: \"verdana\",\n          children: \"Add New Movie\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n        open: snackbarOpen,\n        autoHideDuration: 3000 // Adjust as needed\n        ,\n        onClose: handleCloseSnackbar,\n        message: snackbarMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddMovie, \"aFF9UCoDin9oHlPj9FQEYCqDuo8=\");\n\n_c = AddMovie;\nexport default AddMovie;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddMovie\");","map":{"version":3,"names":["Box","Button","Checkbox","FormLabel","Snackbar","TextField","Typography","React","useState","addMovie","labelProps","mt","mb","AddMovie","inputs","setInputs","title","description","posterUrl","releaseDate","featured","actors","setActors","actor","setActor","snackbarOpen","setSnackbarOpen","snackbarMessage","setSnackbarMessage","handleChange","e","prevState","target","name","value","handleSubmit","preventDefault","console","log","then","res","catch","err","handleCloseSnackbar"],"sources":["C:/Users/Jasvinder Kaur/OneDrive/Desktop/final/movie-booking-project/movie-booking-project-frontend/src/components/Movies/AddMovie.js"],"sourcesContent":["import {\n  Box,\n  Button,\n  Checkbox,\n  FormLabel,\n  Snackbar,\n  TextField,\n  Typography,\n} from \"@mui/material\";\nimport React, { useState } from \"react\";\nimport { addMovie } from \"../../api-helpers/api-helpers\";\n\nconst labelProps = {\n  mt: 1,\n  mb: 1,\n};\n\nconst AddMovie = () => {\n  const [inputs, setInputs] = useState({\n    title: \"\",\n    description: \"\",\n    posterUrl: \"\",\n    releaseDate: \"\",\n    featured: false,\n  });\n  const [actors, setActors] = useState([]);\n  const [actor, setActor] = useState(\"\");\n  const [snackbarOpen, setSnackbarOpen] = useState(false);\n  const [snackbarMessage, setSnackbarMessage] = useState(\"\");\n\n  const handleChange = (e) => {\n    setInputs((prevState) => ({\n      ...prevState,\n      [e.target.name]: e.target.value,\n    }));\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    console.log(inputs, actors);\n    addMovie({ ...inputs, actors })\n      .then((res) => {\n        console.log(res);\n        setSnackbarMessage(\"Movie added successfully!\");\n        setSnackbarOpen(true);\n      })\n      .catch((err) => console.log(err));\n  };\n\n  // Function to handle closing Snackbar\n  const handleCloseSnackbar = () => {\n    setSnackbarOpen(false);\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <Box\n          width={\"50%\"}\n          padding={10}\n          margin=\"auto\"\n          display={\"flex\"}\n          flexDirection=\"column\"\n          boxShadow={\"10px 10px 20px #ccc\"}\n        >\n          <Typography\n            textAlign={\"center\"}\n            variant=\"h5\"\n            fontFamily={\"verdana\"}\n          >\n            Add New Movie\n          </Typography>\n          {/* Rest of the form content */}\n        </Box>\n\n        {/* Snackbar for success message */}\n        <Snackbar\n          open={snackbarOpen}\n          autoHideDuration={3000} // Adjust as needed\n          onClose={handleCloseSnackbar}\n          message={snackbarMessage}\n        />\n      </form>\n    </div>\n  );\n};\n\nexport default AddMovie;\n"],"mappings":";;;AAAA,SACEA,GADF,EAEEC,MAFF,EAGEC,QAHF,EAIEC,SAJF,EAKEC,QALF,EAMEC,SANF,EAOEC,UAPF,QAQO,eARP;AASA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,QAAT,QAAyB,+BAAzB;;AAEA,MAAMC,UAAU,GAAG;EACjBC,EAAE,EAAE,CADa;EAEjBC,EAAE,EAAE;AAFa,CAAnB;;AAKA,MAAMC,QAAQ,GAAG,MAAM;EAAA;;EACrB,MAAM,CAACC,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC;IACnCQ,KAAK,EAAE,EAD4B;IAEnCC,WAAW,EAAE,EAFsB;IAGnCC,SAAS,EAAE,EAHwB;IAInCC,WAAW,EAAE,EAJsB;IAKnCC,QAAQ,EAAE;EALyB,CAAD,CAApC;EAOA,MAAM,CAACC,MAAD,EAASC,SAAT,IAAsBd,QAAQ,CAAC,EAAD,CAApC;EACA,MAAM,CAACe,KAAD,EAAQC,QAAR,IAAoBhB,QAAQ,CAAC,EAAD,CAAlC;EACA,MAAM,CAACiB,YAAD,EAAeC,eAAf,IAAkClB,QAAQ,CAAC,KAAD,CAAhD;EACA,MAAM,CAACmB,eAAD,EAAkBC,kBAAlB,IAAwCpB,QAAQ,CAAC,EAAD,CAAtD;;EAEA,MAAMqB,YAAY,GAAIC,CAAD,IAAO;IAC1Bf,SAAS,CAAEgB,SAAD,KAAgB,EACxB,GAAGA,SADqB;MAExB,CAACD,CAAC,CAACE,MAAF,CAASC,IAAV,GAAiBH,CAAC,CAACE,MAAF,CAASE;IAFF,CAAhB,CAAD,CAAT;EAID,CALD;;EAOA,MAAMC,YAAY,GAAIL,CAAD,IAAO;IAC1BA,CAAC,CAACM,cAAF;IACAC,OAAO,CAACC,GAAR,CAAYxB,MAAZ,EAAoBO,MAApB;IACAZ,QAAQ,CAAC,EAAE,GAAGK,MAAL;MAAaO;IAAb,CAAD,CAAR,CACGkB,IADH,CACSC,GAAD,IAAS;MACbH,OAAO,CAACC,GAAR,CAAYE,GAAZ;MACAZ,kBAAkB,CAAC,2BAAD,CAAlB;MACAF,eAAe,CAAC,IAAD,CAAf;IACD,CALH,EAMGe,KANH,CAMUC,GAAD,IAASL,OAAO,CAACC,GAAR,CAAYI,GAAZ,CANlB;EAOD,CAVD,CApBqB,CAgCrB;;;EACA,MAAMC,mBAAmB,GAAG,MAAM;IAChCjB,eAAe,CAAC,KAAD,CAAf;EACD,CAFD;;EAIA,oBACE;IAAA,uBACE;MAAM,QAAQ,EAAES,YAAhB;MAAA,wBACE,QAAC,GAAD;QACE,KAAK,EAAE,KADT;QAEE,OAAO,EAAE,EAFX;QAGE,MAAM,EAAC,MAHT;QAIE,OAAO,EAAE,MAJX;QAKE,aAAa,EAAC,QALhB;QAME,SAAS,EAAE,qBANb;QAAA,uBAQE,QAAC,UAAD;UACE,SAAS,EAAE,QADb;UAEE,OAAO,EAAC,IAFV;UAGE,UAAU,EAAE,SAHd;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MARF;QAAA;QAAA;QAAA;MAAA,QADF,eAoBE,QAAC,QAAD;QACE,IAAI,EAAEV,YADR;QAEE,gBAAgB,EAAE,IAFpB,CAE0B;QAF1B;QAGE,OAAO,EAAEkB,mBAHX;QAIE,OAAO,EAAEhB;MAJX;QAAA;QAAA;QAAA;MAAA,QApBF;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AA+BD,CApED;;GAAMd,Q;;KAAAA,Q;AAsEN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}